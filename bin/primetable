#!/usr/bin/env ruby

require 'primetable'
require 'timer'
require 'optparse'
require 'ostruct'

class OptParse

  CODES = %w[iso-2022-jp shift_jis euc-jp utf8 binary]
  CODE_ALIASES = { "jis" => "iso-2022-jp", "sjis" => "shift_jis" }

  #
  # Return a structure describing the options.
  #
  def self.parse(args)
    # The options specified on the command line will be collected in *options*.
    # We set default values here.
    options = OpenStruct.new
    options.encoding = "utf8"

    opt_parser = OptionParser.new do |opts|
      opts.banner = "Usage: primetable [options]"

      opts.separator ""
      opts.separator "Specific options:"
      
      # This will add a display of the run time to the usual output.
      opts.on_tail("-t", "--time", "Display run time") do
        Timer.timer{puts PrimeTable.run}
        puts Timer.time
      end
      

      # Keyword completion.  We are specifying a specific set of arguments (CODES
      # and CODE_ALIASES - notice the latter is a Hash), and the user may provide
      # the shortest unambiguous text.
      code_list = (CODE_ALIASES.keys + CODES).join(',')
      opts.on("--code CODE", CODES, CODE_ALIASES, "Select encoding",
              "  (#{code_list})") do |encoding|
        options.encoding = encoding
      end

      opts.separator ""
      opts.separator "Common options:"

      # No argument, shows at tail.  This will print an options summary.
      # Try it and see!
      opts.on_tail("-h", "--help", "Show this message") do
        puts opts
        exit
      end

      # Another typical switch to print the version.
      opts.on_tail("-v", "--version", "Show version") do
        puts "PrimeTable v#{PrimeTable::VERSION}"
        exit
      end
    end

    opt_parser.parse!(args)
    options
  end  # parse()

end  # class OptParse

# Parse the options and behave accordingly
options = OptParse.parse(ARGV)

# Default behavior if no options are passed
puts PrimeTable.run
